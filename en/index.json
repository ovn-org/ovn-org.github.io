[
{
	"uri": "/en/contributing/website/",
	"title": "Contributing to the OVN website",
	"tags": [],
	"description": "",
	"content": "The OVN documentation website is based on hugo, grav, and the hugo-learn-theme and written in markdown format.\nIf you want to contribute I recommend reading the hugo-learn-theme documentation\nYou can always click the \u0026ldquo;Edit this page link\u0026rdquo; at the top right of each page, but if you want to test your changes locally before submitting you can:\n  Fork the ovn-org/ovn-website on github\n  Checkout your copy locally\n  $ git clone ssh://git@github.com/\u0026lt;your-user\u0026gt;/ovn-website.git $ cd ovn-website $ make server  Open your browser on http://localhost:1313\n  Edit files in src, the browser should automatically reload changes.\n  Eventually commit, push, and pull-request your changes. You can find a good guide about the github workflow here: contributing to a github project\n  "
},
{
	"uri": "/en/architecture/",
	"title": "Architecture",
	"tags": [],
	"description": "",
	"content": "OVN, the Open Virtual Network, is a system to support logical network abstraction in virtual machine and container environments. OVN complements the existing capabilities of OVS to add native support for logical network abstractions, such as logical L2 and L3 overlays and security groups. Services such as DHCP are also desirable features. Just like OVS, OVN\u0026rsquo;s design goal is to have a production-quality implementation that can operate at significant scale.\nA physical network comprises physical wires, switches, and routers. A virtual network extends a physical network into a hypervisor or container platform, bridging VMs or containers into the physical network. An OVN logical network is a network implemented in software that is insulated from physical (and thus virtual) networks by tunnels or other encapsulations. This allows IP and other address spaces used in logical networks to overlap with those used on physical networks without causing conflicts. Logical network topologies can be arranged without regard for the topologies of the physical networks on which they run. Thus, VMs that are part of a logical network can migrate from one physical machine to another without network disruption.\nThe encapsulation layer prevents VMs and containers connected to a logical network from communicating with nodes on physical networks. For clustering VMs and containers, this can be acceptable or even desirable, but in many cases VMs and containers do need connectivity to physical networks. OVN provides multiple forms of gateways for this purpose.\nAn OVN deployment consists of several components:\n Cloud Management System (CMS): integrates OVN into a physical network by managing the OVN logical network elements and connecting the OVN logical network infrastructure to physical network elements. Exmaples include OpenStack Neutron\u0026rsquo;s ml2/ovn plugin and the ovn-kubernetes project. OVN Databases: stores data representing the OVN logical and physical networks. Hypervisors: run Open vSwitch and translate the OVN logical network into OpenFlow on a physical or virtual machine. Gateways: extends a tunnel-based OVN logical network into a physical network by forwarding packets between tunnels and the physical network infrastructure.   CMS | | +-----------|-----------+ | | | | OVN/CMS Plugin | | | | | | | | OVN Northbound DB | | | | | | | | ovn-northd | | | | +-----------|-----------+ | | +-------------------+ | OVN Southbound DB | +-------------------+ | | +------------------+------------------+ | | | HV 1 | | HV n | +---------------|---------------+ . +---------------|---------------+ | | | . | | | | ovn-controller | . | ovn-controller | | | | | . | | | | | | | | | | | | | ovs-vswitchd ovsdb-server | | ovs-vswitchd ovsdb-server | | | | | +-------------------------------+ +-------------------------------+ A detailed reference of OVN\u0026rsquo;s architecture can be found on the ovn-architecture manpage.\nLearn more about OVN  OVN Overview OVN Overview OVN Overview OVN and OpenStack  "
},
{
	"uri": "/en/releases/",
	"title": "Releases",
	"tags": [],
	"description": "",
	"content": "This page lists the current supported OVN release, and previous obsoleted releases, for each series. To learn more about the release scheme for OVN, please see the versioning document located here.\n   Series Release Release Date Release Notes     OVN 21.06 OVN 21.06.0 18 Jun 2021 Release 21.06.0   OVN 21.03 OVN 21.03.0 12 Mar 2021 Release 21.03.0   OVN 20.12 OVN 20.12.0 18 Dec 2020 Release 20.12.0   OVN 20.09 OVN 20.09.0 29 Sep 2020 Release 20.09.0   OVN 20.06 OVN 20.06.2 21 Aug 2020     OVN 20.06.1 08 Jul 2020     OVN 20.06.0 09 Jun 2020    OVN 20.03 OVN 20.03.1 11 Jun 2020     OVN 20.03.0 02 Mar 2020     Prior to the 20.03 series, OVN was included as part of the Open vSwitch project. To get versions prior to 20.03.0, please retrieve them from the Open vSwitch github repository\n"
},
{
	"uri": "/en/contributing/code-of-conduct/",
	"title": "Code of Conduct",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/contributing/",
	"title": "Contributing",
	"tags": [],
	"description": "",
	"content": "As an open source project, we welcome contributions of any kind. These can range from bug reports and code reviews, to signficant code or documentation features.\nMore information and helpful links include:\n Mailing lists for patches and bug reports Guidelines on patch submission How to report bugs Current and past contributors  Detailed information on contributing to OVN can be found in OVN documentation.\n"
},
{
	"uri": "/en/",
	"title": "OVN, Open Virtual Network",
	"tags": [],
	"description": "",
	"content": "OVN Open Virtual Network OVN (Open Virtual Network) is a series of daemons for the Open vSwitch that translate virtual network configurations into OpenFlow. OVN is licensed under the open source Apache 2 license.\nOVN provides a higher-layer of abstraction than Open vSwitch, working with logical routers and logical switches, rather than flows. OVN is intended to be used by cloud management software (CMS). For details about the architecture of OVN, see the ovn-architecture manpage. Some high-level features offered by OVN include:\n Distributed virtual routers Distributed logical switches Access Control Lists DHCP DNS server  Like Open vSwitch, OVN is written in platform-independent C. OVN runs entirely in userspace and therefore requires no kernel modules to be installed.\nLatest Release Download the latest release of OVN on the releases page on the left. For a summary of changes in the latest release, see here.\nDistribution documentation (aka man pages) is available here.\nIRC meetings We have weekly IRC meetings you can participate in:\nOVN weekly IRC meeting every Thu 1715 UTC in #openvswitch on irc.libera.chat\nUntil recently, OVN code lived within the Open vSwitch codebase. OVN was recently split into its own repo.\n "
},
{
	"uri": "/en/releases/release_21.06.0/",
	"title": "Release 21.06.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 21.06.0 release of OVN contains a mix of new features and performance improvements.\nNew Features  A new version of ovn-northd is included. This version is written in Differential Datalog instead of C and processes incrementally. VLAN passthru mode is supported. Custom 802.11ad support for localnet ports is added. An \u0026ldquo;allow-stateless\u0026rdquo; ACL option has been added that will always bypass conntrack. DNS now responds to PTR requests. There is now a \u0026ldquo;\u0026ndash;dry-run\u0026rdquo; option for ovn-northd and ovn-northd-ddlog.  Performance Enhancements  The C version of ovn-northd can now process data in parallel threads. ct.inv can be disabled for deployments where offloading to smart NICs is desired. Similar to the ovn-nbctl daemon, ovn-sbctl has a daemon mode.  "
},
{
	"uri": "/en/releases/release_21.03.0/",
	"title": "Release 21.03.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 21.03.0 release of OVN contains a mix of new features and performance improvements.\nNew Features  When using the \u0026ldquo;reject\u0026rdquo; ACL verdict with SCTP, OVN now responds with an SCTP ABORT. OVN now supports \u0026ldquo;memory/show\u0026rdquo; via ovn-appct similar to OVS. OVN now supports using BFD on static routes to test liveness. See ovn-nb documentation for more details. Various ovn-nbctl enhancements  lr-route-list gives a BFD report lr-route-list gives ECMP and ECMP symmetric reply information lr-lb-add option now has an \u0026ndash;event option to enable controller events for empty backends. lr-route-add now has a \u0026ndash;bfd option to enable BFD. lb-add has a \u0026ndash;reject option to automatically reject packets sent to VIPs with no backends.   ovn-ic now has a systemd-unit Load balancers have a \u0026ldquo;hairpin_snat_ip\u0026rdquo; option. See ovn-nb documentation for more information. RBAC additions:  Chassis_private external_ids IGMP_Grup table Controller_Event table FDP table   MAC learning support has been added. DCHP Options 44 and 45 (NB Name Server, NB Node Type) are now supported. Logical router policies now support ECMP. lflow cache now has a lflow-cache/show-stats command accessible via ovn-appctl Support for building Debian packages has been re-added.  Performance Enhancements  Partial set and partial map updates are used in place of full set replacement in OVSDB operations. In several cases this greatly reduces the size of messages transmitted during OVSDB operations. Rather than pre-programming all possible load balancer hairpin flows, we now use the \u0026ldquo;learn\u0026rdquo; action in OVS. This has the potential to greatly reduce the number of flows installed by OVN. Several checks of conntrack fields have been removed. This improves chances of flows being offloadable in certain scenarios.  "
},
{
	"uri": "/en/releases/release_20.12.0/",
	"title": "Release 20.12.0",
	"tags": [],
	"description": "",
	"content": "In addition to numerous bug fixes, the 20.12.0 release of OVN contains a mix of new features and performance improvements.\nNew Features  Add support for DHCP RENEW/REBIND for IPv6 prefix delegation (RFC 3633). DHCP iPXE support has been added. A new vlan-passthru option has been added to logical switches to allow vlan-tagged incoming traffic. DHCP option 28 (broadcast address) support has been added. The conntrack zone used by a gateway router for SNAT can now be explicitly configured. The nb_cfg value is now propagated to the OVS database. It is possible to pin ovn-northd or ovn-controller to a specific version. This can allow for less downtime during upgrades if the central components are updated before the ovn-controllers in a cluster. Support for \u0026ldquo;fair\u0026rdquo; meters, which allows for multiple ACL logs to use the same meter while being rate-limited independently.  Performance Enhancements  \u0026ldquo;reject\u0026rdquo; ACLs have been reduced from generating 4 logical flows to generating 1. MAC bindings are updated for directly-connected logical routers, saving the need for unnecessary ARPs/NDs. The number of flows required for hairpin traffic to load balancers has been reduced. ovn-northd can now group logical flows that are shared between multiple datapaths using datapath groups. This has been shown to dramatically reduce the number of logical flows in the southbound database in large deployments. The option is disabled by default but likely will be switched to be enabled by default in a later release. Some OVSDB operations have been updated to use partial map updates, reducing the size of the data being sent and processed in a transaction.  "
},
{
	"uri": "/en/releases/release_20.09.0/",
	"title": "Release 20.09.0",
	"tags": [],
	"description": "",
	"content": "In addition to numerous bug fixes, the 20.09.0 release of OVN contains a mix of new features and performance improvements.\nNew Features  Allow the lb_force_snat_ip and dnat_force_snat_ip options to take an IPv4 and IPv6 address pair. This may be needed for dual stack setups. DHCP now understands DHCPDECLINE External IP based NAT. This allows for a set of IPs to be used for SNAT instead of always SNATting to a single external IP address. It also allows for a range of IPs to be matched for DNATting. VXLAN support has been added for general-purpose tunneling. Previously VXLAN could only be used for ramp switches. Please see documentation for details about limitations VXLAN introduces as compared to GENEVE and STT.  Performance Enhancements  Avoid using conntrack in certain scenarios. Conntrack is known to introduce latency. The following scenarios have been optimized to not use conntrack:  When sending packets from a logical switch to logical router when a load balancer is used. When sending packets through a logical switch with a load balancer when the destination IP is not the load balancer VIP.   Avoid nb_cfg notification flooding. This significantly lowers the amount of time it takes for a northbound change to sync to all hypervisors. Probes for unix sockets are now disabled by default. This prevents unnecessary connection checks between processes on the same system. The set of OpenFlow flows sent to OVS is now incrementally processed. Parsed expressions are now cached in ovn-controller, meaning less CPU time is spent re-parsing expressions. The number of flows created for stateful ACLs has been reduced by a factor of 2 for allow-related ACLs and a factor of 3 for drop/reject ACLs.  "
},
{
	"uri": "/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]