[
{
	"uri": "/en/contributing/website/",
	"title": "Contributing to the OVN website",
	"tags": [],
	"description": "",
	"content": "The OVN documentation website is based on hugo, grav, and the hugo-learn-theme and written in markdown format.\nIf you want to contribute I recommend reading the hugo-learn-theme documentation\nYou can always click the \u0026ldquo;Edit this page link\u0026rdquo; at the top right of each page, but if you want to test your changes locally before submitting you can:\nFork the ovn-org/ovn-website on github\nCheckout your copy locally\n$ git clone ssh://git@github.com/\u0026lt;your-user\u0026gt;/ovn-website.git $ cd ovn-website $ make server Open your browser on http://localhost:1313\nEdit files in src, the browser should automatically reload changes.\nEventually commit, push, and pull-request your changes. You can find a good guide about the github workflow here: contributing to a github project\n"
},
{
	"uri": "/en/architecture/",
	"title": "Architecture",
	"tags": [],
	"description": "",
	"content": "OVN, the Open Virtual Network, is a system to support logical network abstraction in virtual machine and container environments. OVN complements the existing capabilities of OVS to add native support for logical network abstractions, such as logical L2 and L3 overlays and security groups. Services such as DHCP are also desirable features. Just like OVS, OVN\u0026rsquo;s design goal is to have a production-quality implementation that can operate at significant scale.\nA physical network comprises physical wires, switches, and routers. A virtual network extends a physical network into a hypervisor or container platform, bridging VMs or containers into the physical network. An OVN logical network is a network implemented in software that is insulated from physical (and thus virtual) networks by tunnels or other encapsulations. This allows IP and other address spaces used in logical networks to overlap with those used on physical networks without causing conflicts. Logical network topologies can be arranged without regard for the topologies of the physical networks on which they run. Thus, VMs that are part of a logical network can migrate from one physical machine to another without network disruption.\nThe encapsulation layer prevents VMs and containers connected to a logical network from communicating with nodes on physical networks. For clustering VMs and containers, this can be acceptable or even desirable, but in many cases VMs and containers do need connectivity to physical networks. OVN provides multiple forms of gateways for this purpose.\nAn OVN deployment consists of several components:\nCloud Management System (CMS): integrates OVN into a physical network by managing the OVN logical network elements and connecting the OVN logical network infrastructure to physical network elements. Exmaples include OpenStack Neutron\u0026rsquo;s ml2/ovn plugin and the ovn-kubernetes project. OVN Databases: stores data representing the OVN logical and physical networks. Hypervisors: run Open vSwitch and translate the OVN logical network into OpenFlow on a physical or virtual machine. Gateways: extends a tunnel-based OVN logical network into a physical network by forwarding packets between tunnels and the physical network infrastructure. CMS | | +-----------|-----------+ | | | | OVN/CMS Plugin | | | | | | | | OVN Northbound DB | | | | | | | | ovn-northd | | | | +-----------|-----------+ | | +-------------------+ | OVN Southbound DB | +-------------------+ | | +------------------+------------------+ | | | HV 1 | | HV n | +---------------|---------------+ . +---------------|---------------+ | | | . | | | | ovn-controller | . | ovn-controller | | | | | . | | | | | | | | | | | | | ovs-vswitchd ovsdb-server | | ovs-vswitchd ovsdb-server | | | | | +-------------------------------+ +-------------------------------+ A detailed reference of OVN\u0026rsquo;s architecture can be found on the ovn-architecture manpage.\nLearn more about OVN OVN Overview OVN Overview OVN Overview OVN and OpenStack "
},
{
	"uri": "/en/releases/",
	"title": "Releases",
	"tags": [],
	"description": "",
	"content": "This page lists the current supported OVN release, and previous obsoleted releases, for each series. To learn more about the release scheme for OVN, please see the versioning document located here.\nSeries Release Release Date Release Notes Manpages OVN 22.12 OVN 22.12.0 16 Dec 2022 Release 22.12.0 Doc 22.12.0 OVN 22.09 OVN 22.09.0 16 Sep 2022 Release 22.09.0 Doc 22.09.0 OVN 22.06 OVN 22.06.0 03 Jun 2022 Release 22.06.0 Doc 22.06.0 OVN 22.03 OVN 22.03.1 (LTS) 03 Jun 2022 Release 22.03.0 Doc 22.03.0 OVN 21.12 OVN 21.12.2 03 Jun 2022 N/A OVN 21.09 OVN 21.09.0 04 Oct 2021 Release 21.09.0 Doc 21.09.0 OVN 21.06 OVN 21.06.0 18 Jun 2021 Release 21.06.0 Doc 21.06.0 OVN 21.03 OVN 21.03.0 12 Mar 2021 Release 21.03.0 Doc 21.03.0 OVN 20.12 OVN 20.12.0 18 Dec 2020 Release 20.12.0 OVN 20.09 OVN 20.09.0 29 Sep 2020 Release 20.09.0 OVN 20.06 OVN 20.06.2 21 Aug 2020 OVN 20.06.1 08 Jul 2020 OVN 20.06.0 09 Jun 2020 OVN 20.03 OVN 20.03.1 11 Jun 2020 OVN 20.03.0 02 Mar 2020 Prior to the 20.03 series, OVN was included as part of the Open vSwitch project. To get versions prior to 20.03.0, please retrieve them from the Open vSwitch github repository\n"
},
{
	"uri": "/en/contributing/code-of-conduct/",
	"title": "Code of Conduct",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/contributing/",
	"title": "Contributing",
	"tags": [],
	"description": "",
	"content": "As an open source project, we welcome contributions of any kind. These can range from bug reports and code reviews, to signficant code or documentation features.\nMore information and helpful links include:\nMailing lists for patches and bug reports Guidelines on patch submission How to report bugs Current and past contributors Detailed information on contributing to OVN can be found in OVN documentation.\n"
},
{
	"uri": "/en/",
	"title": "OVN, Open Virtual Network",
	"tags": [],
	"description": "",
	"content": "OVN Open Virtual Network OVN (Open Virtual Network) is a series of daemons for the Open vSwitch that translate virtual network configurations into OpenFlow. OVN is licensed under the open source Apache 2 license.\nOVN provides a higher-layer of abstraction than Open vSwitch, working with logical routers and logical switches, rather than flows. OVN is intended to be used by cloud management software (CMS). For details about the architecture of OVN, see the ovn-architecture manpage. Some high-level features offered by OVN include:\nDistributed virtual routers Distributed logical switches Access Control Lists DHCP DNS server Like Open vSwitch, OVN is written in platform-independent C. OVN runs entirely in userspace and therefore requires no kernel modules to be installed.\nLatest Release Download the latest release of OVN on the releases page on the left. For a summary of changes in the latest release, see here.\nDistribution documentation (aka man pages) is available here.\nIRC meetings We have weekly IRC meetings you can participate in:\nOVN weekly IRC meeting every Thu 1715 UTC in #openvswitch on irc.libera.chat\nOVN code used to live within the Open vSwitch codebase. It was split into its own repo in 2019.\n"
},
{
	"uri": "/en/releases/release_22.09.0/",
	"title": "Release 22.09.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 22.09.0 release of OVN contains a mix of new features and performance improvements.\nNew Features Load balancers attached to logical routers have the option to automatically be applied to connected logical switches as well. When multiple requested chassis are used for a switch port, a RARP activation strategy has been implemented to allow for automatic switchover between the chassis. An IPsec option has been added to force NAT-T encapsulation. ovn-ctl can now accept arbitrary args, which can be passed along to the daemons it starts. An aging mechanism has been added to MAC_Bindings so that they are removed after a certain amount of idleness. Performance Enhancements Logical datapath groups are no longer an option to be enabled. Instead, they are always used, resulting in performance improvements without having to set an option. Datapath groups are used for southbound load balancers, resulting in improved southbound database and ovn-northd performance, and decreased memory usage. Several improvements have been made to avoid downtime of the dataplane during upgrades and restarts. ovn-northd will attempt to accumulate more database updates before blindly processing the first one it sees. Changes to the data structures used in ovn-northd for datapath groups resulted in a near 3x speedup of ovn-northd, and nearly halving the memory used. "
},
{
	"uri": "/en/releases/release_22.06.0/",
	"title": "Release 22.06.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 22.06.0 release of OVN contains a mix of new features and performance improvements.\nNew Features Many features that made use of ct_label now use ct_mark. This allows for easier hardware offloading. NAT may now be configured on routers with multiple distributed gateway ports. MAC bindings may now be configured via the northbound database. \u0026ldquo;requested-chassis\u0026rdquo; now accepts a comma-separated list to allow for a port to be bound to multiple chassis. ACLs may now be configured to drop by default instead of allowing by default. QOS may now be configured to allow for a minimum bandwidth guarantee. An option has been added to regulate whether load balancer VIPs have ARP responder flows added by default. ovn-northd parallelization options have been overhauled. The \u0026ldquo;next-server\u0026rdquo; field can now be sent in DHCP replies sent by OVN. Performance Enhancements Flow installation has been modified to minimize dataplan downstime during an upgrade/restart. load balancer gateway router flows have been optimized, bringing ovn-northd loop execution down. Port security flows are calculated in ovn-controller instad of ovn-northd now. This results in both ovn-northd and ovn-controller running more efficiently. "
},
{
	"uri": "/en/releases/release_22.03.0/",
	"title": "Release 22.03.0",
	"tags": [],
	"description": "",
	"content": "OVN 22.03.0 is a long term support (LTS) release. This version will receive bug fix support until the release of OVN 24.03.0, at which point it will receive one additional year of critical fixes.\nIn addition to bug fixes, the 22.03.0 release of OVN contains a mix of new features and performance improvements.\nNew Features ovn-ic now supports multicast flooding between AZs. The \u0026ndash;dummy-numa option for ovn-northd has been added. Control plan protection (CoPP) can now be named, allowing for easier referencing of policies. Solicited router advertisements now include rdnss, dnssl, and route_info, just like periodic router advertisements. When ACL logging is enabled, the direction of the traffic is now included in the logs. A new \u0026ldquo;exclude-lb-vips-from-garp\u0026rdquo; option has been added so that if options:nat-addresses is set to \u0026ldquo;router\u0026rdquo; on a logical switch port, we will not send GARPs for load balancer VIPs on the connected logical router. ACLs have a new log-related option that allows for reply and related traffic to be logged for stateful ACLs. from-lport ACLs can now optionally be applied after load balancing, in the case where an ACL might match on a load balancer backend. Performance Enhancements Incremental processing of address sets has been enhanced to be more fine-grained, resulting in fewer computations required when address sets are updated. Meters are now incrementally processed. This functions both as a bug fix as well as a performance enhancement. Documentation Distribution documentation (aka man pages) specific to this release is available here.\n"
},
{
	"uri": "/en/releases/release_22.12.0/",
	"title": "Release 21.12.0",
	"tags": [],
	"description": "",
	"content": "22.12.0 is mainly a stability release. The vast majority of commits were made with stabilization and fixing issues in mind.\nIn addition to bug fixes, the 21.12.0 release of OVN contains a mix of new features and performance improvements.\nNew Features There is a new option to automatically inherit load balancer groups from a logical router to its connected logical switches. A new load balancer affinity option has been added, which allows for a new load balancer backend to automatically be chosen after a configured time. IPFIX sampling has been added as a means of debugging dropped packets. A new logical flow action, ct_commit_nat, has been added, to allow for related packets (such as ICMP packets) to traverse a load balancer the same as the main connection traffic. Chassis template variables have been added to allow for easier configuration of similar load balancers that are applied across multiple chassis. Performance Enhancements Some additional incremental processing has been added to northd, including for address set and port group propagation from the northbound to the southbound database. Chassis template variables can be used to greatly reduce the number of logical flows that are created for load balancers, depending on the use case. "
},
{
	"uri": "/en/releases/release_21.09.0/",
	"title": "Release 21.09.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 21.09.0 release of OVN contains a mix of new features and performance improvements.\nNew Features OVN can now detect datapath features in OVS using the \u0026ldquo;Datapath\u0026rdquo; table in OVS. This is used to detect if all-zero SNAT is available. DHCP now supports option 12 (hostname). A limitation has been removed that now allows the full TCP/UDP port range (1-65535) rather than only half the range (1-32767) for Service Monitors. Proxy ARP support has been added for Logical Switch ports of type \u0026ldquo;router\u0026rdquo;. An \u0026ldquo;\u0026ndash;add-route\u0026rdquo; option is available for the \u0026ldquo;ovn-nbctl lr-nat-add\u0026rdquo; and \u0026ldquo;ovn-nbctl lr-lb-add\u0026rdquo; commands. This automatically creates static routes to the VIP or external IP from connected routers and adds ARP/ND resolution flows for these IP addresses. Many new stopwatches have been added to ovn-northd and ovn-controller for more fine-tuned debugging of execution times. A new \u0026ldquo;ovn-sbctl count-flows\u0026rdquo; command has been added in order to retrieve the number of logical flows more quickly. Control Plane Protection (CoPP) has been added. PMTU discovery has been added for incoming traffic from outside the OVN cluster. Memory usage statistics can be gathered from ovn-northd. Distributed routers may now have more than one gateway port. ACLs can now be given labels so that it can be detected which ACL was responsible for allowing traffic. In addition to external_ids:iface-id, a new optional external_ids:iface-id-ver option has been added for OVS Interfaces to allow for more control over when ports are bound. Static routes with no nexthop may be configured. OVN now stores the timestamp when a port is bound. It is stored in external_ids:ovn-installed-ts in the OVS Interface table. Performance Enhancements Generally speaking, performance was a major focus for the development of OVN 21.09.0.\nLogical flows for DNAT have been reorganized to avoid unnecessary recirculations. IPv6 prefix delegation and router advertisements are now processed incrementally in ovn-controller. Memory is trimmed when the logical flow cache in ovn-controller reduces significantly in size. Load balancer processing has been significantly improved: Southbound Datapath_Binding records have been decoupled from Load_Balancers. This change reduced ovn-northd execution time of a heavy load balancer test case by about 80%. Load balancer defrag flows are now processed once for all routers. This change reduced ovn-northd execution time of a heavy load balancer test case by about 10%. SNAT hairpin flows now use conjunctive matches. Previously, the number of flows was proportional to the number of Load Balancer VIPs x the number of datapaths. Now it is proportional to the number of Load Balancer VIPs + the number of datapaths. In a test with heavy load balancer use, this reduced the execution time of ovn-controller by 26%, reduced the number of OpenFlow flows by 72%, and reduced the memory used by 72%. Some logical flow calculations were optimized, resulting in a 25% reduction in computation time in ovn-northd. Non-local logical flows can be skipped by ovn-controller befor parsing. This change reduced ovn-controller execution time by 70% with the lflow cache disabled. It reduced ovn-controller execution time by 65% and reduced memory usaged by 80% when the lflow cache is enabled. OVSDB client API improvements have been added: Reconnecting to a database resets the backoff counter, meaning that reconnection typically happens much quicker, rather than a minimum of 8 seconds. Optimizations have been made for JSON string serialization. The client side of the ovsdb-data module has been optimized. ARP flood flows for known unreachable IPs have been broken into multiple logical flows instead of being combined into one. This reduced OpenFlow installation time by about 98% for cases with many unreachable IP addresses. Physical flows and Connection Tracking zones have enhanced incremental processing logic, allowing for fewer full recomputes in ovn-controller when physical changes occur. A change to reduce the number of flows for cases where logical switches are pinned to a single chassis was added. This reduced the number of OpenFlow flows per node by 70%, reduced ovn-controller memory by 80%, reduced ovn-controller recompute time by 90%, and reduced ovn-controller restart time by 90%. Pipelines in ovn-northd are represented as digits instead of strings, resulting in a savings of 1-3.5% in processing time. Logical datapath groups are now enabled by default. These were introduced in OVN 21.03.0 but were not enabled by default. Enabling them allows for repeated logical flows to be stored only once in the southbound database. Parallelized ovn-northd was optimized to work better with datapath groups, resulting in a speedup of about 10%. ovn-northd ddlog received a numerous improvements to its processing, resulting in memory consumption being reduced by as much as 85% and reducing execution time by a significant amount too. Documentation Distribution documentation (aka man pages) specific to this release is available here.\n"
},
{
	"uri": "/en/releases/release_21.06.0/",
	"title": "Release 21.06.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 21.06.0 release of OVN contains a mix of new features and performance improvements.\nNew Features A new version of ovn-northd is included. This version is written in Differential Datalog instead of C and processes incrementally. VLAN passthru mode is supported. Custom 802.11ad support for localnet ports is added. An \u0026ldquo;allow-stateless\u0026rdquo; ACL option has been added that will always bypass conntrack. DNS now responds to PTR requests. There is now a \u0026ldquo;\u0026ndash;dry-run\u0026rdquo; option for ovn-northd and ovn-northd-ddlog. Performance Enhancements The C version of ovn-northd can now process data in parallel threads. ct.inv can be disabled for deployments where offloading to smart NICs is desired. Similar to the ovn-nbctl daemon, ovn-sbctl has a daemon mode. Documentation Distribution documentation (aka man pages) specific to this release is available here.\n"
},
{
	"uri": "/en/releases/release_21.03.0/",
	"title": "Release 21.03.0",
	"tags": [],
	"description": "",
	"content": "In addition to bug fixes, the 21.03.0 release of OVN contains a mix of new features and performance improvements.\nNew Features When using the \u0026ldquo;reject\u0026rdquo; ACL verdict with SCTP, OVN now responds with an SCTP ABORT. OVN now supports \u0026ldquo;memory/show\u0026rdquo; via ovn-appct similar to OVS. OVN now supports using BFD on static routes to test liveness. See ovn-nb documentation for more details. Various ovn-nbctl enhancements lr-route-list gives a BFD report lr-route-list gives ECMP and ECMP symmetric reply information lr-lb-add option now has an \u0026ndash;event option to enable controller events for empty backends. lr-route-add now has a \u0026ndash;bfd option to enable BFD. lb-add has a \u0026ndash;reject option to automatically reject packets sent to VIPs with no backends. ovn-ic now has a systemd-unit Load balancers have a \u0026ldquo;hairpin_snat_ip\u0026rdquo; option. See ovn-nb documentation for more information. RBAC additions: Chassis_private external_ids IGMP_Grup table Controller_Event table FDP table MAC learning support has been added. DCHP Options 44 and 45 (NB Name Server, NB Node Type) are now supported. Logical router policies now support ECMP. lflow cache now has a lflow-cache/show-stats command accessible via ovn-appctl Support for building Debian packages has been re-added. Performance Enhancements Partial set and partial map updates are used in place of full set replacement in OVSDB operations. In several cases this greatly reduces the size of messages transmitted during OVSDB operations. Rather than pre-programming all possible load balancer hairpin flows, we now use the \u0026ldquo;learn\u0026rdquo; action in OVS. This has the potential to greatly reduce the number of flows installed by OVN. Several checks of conntrack fields have been removed. This improves chances of flows being offloadable in certain scenarios. Documentation Distribution documentation (aka man pages) specific to this release is available here.\n"
},
{
	"uri": "/en/releases/release_20.12.0/",
	"title": "Release 20.12.0",
	"tags": [],
	"description": "",
	"content": "In addition to numerous bug fixes, the 20.12.0 release of OVN contains a mix of new features and performance improvements.\nNew Features Add support for DHCP RENEW/REBIND for IPv6 prefix delegation (RFC 3633). DHCP iPXE support has been added. A new vlan-passthru option has been added to logical switches to allow vlan-tagged incoming traffic. DHCP option 28 (broadcast address) support has been added. The conntrack zone used by a gateway router for SNAT can now be explicitly configured. The nb_cfg value is now propagated to the OVS database. It is possible to pin ovn-northd or ovn-controller to a specific version. This can allow for less downtime during upgrades if the central components are updated before the ovn-controllers in a cluster. Support for \u0026ldquo;fair\u0026rdquo; meters, which allows for multiple ACL logs to use the same meter while being rate-limited independently. Performance Enhancements \u0026ldquo;reject\u0026rdquo; ACLs have been reduced from generating 4 logical flows to generating 1. MAC bindings are updated for directly-connected logical routers, saving the need for unnecessary ARPs/NDs. The number of flows required for hairpin traffic to load balancers has been reduced. ovn-northd can now group logical flows that are shared between multiple datapaths using datapath groups. This has been shown to dramatically reduce the number of logical flows in the southbound database in large deployments. The option is disabled by default but likely will be switched to be enabled by default in a later release. Some OVSDB operations have been updated to use partial map updates, reducing the size of the data being sent and processed in a transaction. "
},
{
	"uri": "/en/releases/release_20.09.0/",
	"title": "Release 20.09.0",
	"tags": [],
	"description": "",
	"content": "In addition to numerous bug fixes, the 20.09.0 release of OVN contains a mix of new features and performance improvements.\nNew Features Allow the lb_force_snat_ip and dnat_force_snat_ip options to take an IPv4 and IPv6 address pair. This may be needed for dual stack setups. DHCP now understands DHCPDECLINE External IP based NAT. This allows for a set of IPs to be used for SNAT instead of always SNATting to a single external IP address. It also allows for a range of IPs to be matched for DNATting. VXLAN support has been added for general-purpose tunneling. Previously VXLAN could only be used for ramp switches. Please see documentation for details about limitations VXLAN introduces as compared to GENEVE and STT. Performance Enhancements Avoid using conntrack in certain scenarios. Conntrack is known to introduce latency. The following scenarios have been optimized to not use conntrack: When sending packets from a logical switch to logical router when a load balancer is used. When sending packets through a logical switch with a load balancer when the destination IP is not the load balancer VIP. Avoid nb_cfg notification flooding. This significantly lowers the amount of time it takes for a northbound change to sync to all hypervisors. Probes for unix sockets are now disabled by default. This prevents unnecessary connection checks between processes on the same system. The set of OpenFlow flows sent to OVS is now incrementally processed. Parsed expressions are now cached in ovn-controller, meaning less CPU time is spent re-parsing expressions. The number of flows created for stateful ACLs has been reduced by a factor of 2 for allow-related ACLs and a factor of 3 for drop/reject ACLs. "
},
{
	"uri": "/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]